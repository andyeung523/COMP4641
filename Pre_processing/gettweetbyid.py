# -*- coding: utf-8 -*-
"""getTweetById.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A0ef9bcjaVou4j1mdPXMmHhxIKGKa-X5
"""

import tweepy
import tweepy                   # Python wrapper around Twitter API
import json
import csv
from datetime import date
from datetime import datetime
import time
import pandas as pd

# Connect Google Drive to Colab
# drive.mount('/content/gdrive')

data = pd.read_csv("Result_26052020.csv",error_bad_lines=False)
data.columns = ['id', 'event']
FULL_tweet = []
tweet_IDs = data['id']
event_list = data['event']
for t in tweet_IDs:
    FULL_tweet.append(int(t))
print(FULL_tweet[0:20])


def lookup_tweets(tweet_IDs, api):
    full_tweets = []
    tweet_count = len(tweet_IDs)
    j_iter = 0
    e_iter = 0
    try:
        for i in range((tweet_count // 100) + 1):
            print(j_iter)

            # Catch the last group if it is less than 100 tweets
            end_loc = min((i + 1) * 100, tweet_count)
            tmp_tweet = []
            tmp_tweet = tweet_IDs[i * 100:end_loc]
            # get only the required info
            cuurent_100_tweet = api.statuses_lookup(tmp_tweet)
            current_tmp_list = []
            for tweetFetched in cuurent_100_tweet:
                e_iter+=1
                # print(tweetFetched)
                current_tmp_tweet = {}
                current_tmp_tweet["text"] = tweetFetched.text
                current_tmp_tweet["tweet_id"] = tweetFetched.id_str
                current_tmp_tweet["author_id"] = tweetFetched.author.id_str
                current_tmp_tweet["created_at"] = tweetFetched.created_at
                current_tmp_tweet["in_reply_to_status_id_str"] = tweetFetched.in_reply_to_status_id_str
                current_tmp_tweet["in_reply_to_user_id_str"] = tweetFetched.in_reply_to_user_id_str
                current_tmp_tweet["in_reply_to_screen_name"] = tweetFetched.in_reply_to_screen_name
                if hasattr(tweetFetched, 'quoted_status'):
                    current_tmp_tweet["quoted_status_id_str"] = tweetFetched.quoted_status.id_str
                else:
                    current_tmp_tweet["quoted_status_id_str"] = "None"
                if hasattr(tweetFetched, 'retweeted_status'):
                    current_tmp_tweet["retweet_id"] = tweetFetched.retweeted_status.id_str
                    current_tmp_tweet["retweet_author_id"] = tweetFetched.retweeted_status.author.id_str
                else:
                    current_tmp_tweet["retweet_id"] = "None"
                    current_tmp_tweet["retweet_author_id"] = "None"
                current_tmp_tweet["event"] = event_list[e_iter]
                current_tmp_list.append(current_tmp_tweet)
                full_tweets.append(current_tmp_tweet)
                # print(current_tmp_list)
            with open('Result_26052020.csv', 'a') as csvfile:
                #print('write to csv')
                # write to csv
                linewriter = csv.writer(csvfile, delimiter=',', quotechar="\"")
                for tweet in current_tmp_list:
                    try:
                        linewriter.writerow([tweet["text"], tweet["tweet_id"], tweet["author_id"], tweet["created_at"], tweet["in_reply_to_status_id_str"], tweet["in_reply_to_user_id_str"],
                                             tweet["in_reply_to_screen_name"], tweet["quoted_status_id_str"], tweet["retweet_id"], tweet["retweet_author_id"], tweet["event"]])
                    except Exception as e:
                        print('oh', e)
            #store in var

            j_iter += 100
            print(len(full_tweets))
        return full_tweets
    except tweepy.TweepError:
        print('Something went wrong, quitting...')


consumer_key = '05LDRJw0fW8Jif2vtBRXKpW0B'
consumer_secret = 'cJzuWT1iLdO4FYfp7La64o9Zh7Nc8gxfN4JH1hLB230E9KUOfK'
access_token = '3680424085-8wrZ58tuxkUolZCHk3o3iK5lx09C2pY8LX3ZB5f'
access_token_secret = 'kSkXpKva66Ls1evugAoBwFfLZxDPeJQ2wjPMkJrokThYV'


auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
print('start')
api = tweepy.API(auth, wait_on_rate_limit=True, wait_on_rate_limit_notify=True)

full = lookup_tweets(FULL_tweet, api)
print('full', full)
